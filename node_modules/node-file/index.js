var fs = require('fs'),
    path = require('path');

/**
 * 创建多级目录
 * @param  {String} dirpath 路径
 * @param  {String} mode    模式
 */
var mkdirsSync = function(dirpath, mode) {
    if(fs.existsSync(dirpath)){
        return;
    }
    var dirs = dirpath.split('/');
    var dir = '';
    for(var i = 0; i < dirs.length; i++) {
        dir += dirs[i] + '/';
        if(!fs.existsSync(dir)){
            fs.mkdirSync(dir, mode);
        }
    }
};

/**
 * 列出指定目录的所有文件
 * @param  {String} dirpath      路径
 * @param  {String} type 需要读取的文件的格式, 多类型用","分割, 如: "css,js,html"
 * @param  {Boolean} recursive 是否递归
 * @return {Array}  返回文件名数组
 */
var listFilesSync = function(dirpath, type, recursive){
    var result = [];
    var typeList = type.toLowerCase().replace(/\s+/g, '').split(',');
    dirpath = path.resolve(dirpath);
    var list = fs.readdirSync(dirpath);
    var ext, filepath, stat;
    //把文件按文件名排序
    list.sort();
    for(var i = 0, name; name = list[i]; i++) {
        filepath = dirpath + '/' + name;
        stat = fs.statSync(filepath);
        if(stat.isFile()){
            ext = path.extname(name).substr(1);
            if(typeList.indexOf(ext) === -1){
                continue;
            }
            result.push(filepath);
        }
        
        
        
        result.push({
            fileName: name,
            content: fs.readFileSync(fileName)
        });
    };
    return result;
}

exports.mkdirsSync = mkdirsSync;
exports.listFilesSync = listFilesSync;

